#include "basicStrategy.h"

BasicStrategy::BasicStrategy() : hardStrategy_{std::map<std::pair<int, int>, std::string>{}}, softStrategy_{std::map<std::pair<int, int>, std::string>{}}, pairStrategy_{std::map<std::pair<int, int>, std::string>{}}
{ //initialize hard strategy
    hardStrategy_.insert({std::make_pair(8, 2), "Hit"});
    hardStrategy_.insert({std::make_pair(8, 3), "Hit"});
    hardStrategy_.insert({std::make_pair(8, 4), "Hit"});
    hardStrategy_.insert({std::make_pair(8, 5), "Hit"});
    hardStrategy_.insert({std::make_pair(8, 6), "Hit"});
    hardStrategy_.insert({std::make_pair(8, 7), "Hit"});
    hardStrategy_.insert({std::make_pair(8, 8), "Hit"});
    hardStrategy_.insert({std::make_pair(8, 9), "Hit"});
    hardStrategy_.insert({std::make_pair(8, 10), "Hit"});
    hardStrategy_.insert({std::make_pair(8, 11), "Hit"});
    hardStrategy_.insert({std::make_pair(9, 2), "Hit"});
    hardStrategy_.insert({std::make_pair(9, 3), "Double"});
    hardStrategy_.insert({std::make_pair(9, 4), "Double"});
    hardStrategy_.insert({std::make_pair(9, 5), "Double"});
    hardStrategy_.insert({std::make_pair(9, 6), "Double"});
    hardStrategy_.insert({std::make_pair(9, 7), "Hit"});
    hardStrategy_.insert({std::make_pair(9, 8), "Hit"});
    hardStrategy_.insert({std::make_pair(9, 9), "Hit"});
    hardStrategy_.insert({std::make_pair(9, 10), "Hit"});
    hardStrategy_.insert({std::make_pair(9, 11), "Hit"});
    hardStrategy_.insert({std::make_pair(10, 2), "Double"});
    hardStrategy_.insert({std::make_pair(10, 3), "Double"});
    hardStrategy_.insert({std::make_pair(10, 4), "Double"});
    hardStrategy_.insert({std::make_pair(10, 5), "Double"});
    hardStrategy_.insert({std::make_pair(10, 6), "Double"});
    hardStrategy_.insert({std::make_pair(10, 7), "Double"});
    hardStrategy_.insert({std::make_pair(10, 8), "Double"});
    hardStrategy_.insert({std::make_pair(10, 9), "Double"});
    hardStrategy_.insert({std::make_pair(10, 10), "Hit"});
    hardStrategy_.insert({std::make_pair(10, 11), "Hit"});
    hardStrategy_.insert({std::make_pair(11, 2), "Double"});
    hardStrategy_.insert({std::make_pair(11, 3), "Double"});
    hardStrategy_.insert({std::make_pair(11, 4), "Double"});
    hardStrategy_.insert({std::make_pair(11, 5), "Double"});
    hardStrategy_.insert({std::make_pair(11, 6), "Double"});
    hardStrategy_.insert({std::make_pair(11, 7), "Double"});
    hardStrategy_.insert({std::make_pair(11, 8), "Double"});
    hardStrategy_.insert({std::make_pair(11, 9), "Double"});
    hardStrategy_.insert({std::make_pair(11, 10), "Double"});
    hardStrategy_.insert({std::make_pair(11, 11), "Double"});
    hardStrategy_.insert({std::make_pair(12, 2), "Hit"});
    hardStrategy_.insert({std::make_pair(12, 3), "Hit"});
    hardStrategy_.insert({std::make_pair(12, 4), "Stand"});
    hardStrategy_.insert({std::make_pair(12, 5), "Stand"});
    hardStrategy_.insert({std::make_pair(12, 6), "Stand"});
    hardStrategy_.insert({std::make_pair(12, 7), "Hit"});
    hardStrategy_.insert({std::make_pair(12, 8), "Hit"});
    hardStrategy_.insert({std::make_pair(12, 9), "Hit"});
    hardStrategy_.insert({std::make_pair(12, 10), "Hit"});
    hardStrategy_.insert({std::make_pair(12, 11), "Hit"});
    hardStrategy_.insert({std::make_pair(13, 2), "Stand"});
    hardStrategy_.insert({std::make_pair(13, 3), "Stand"});
    hardStrategy_.insert({std::make_pair(13, 4), "Stand"});
    hardStrategy_.insert({std::make_pair(13, 5), "Stand"});
    hardStrategy_.insert({std::make_pair(13, 6), "Stand"});
    hardStrategy_.insert({std::make_pair(13, 7), "Hit"});
    hardStrategy_.insert({std::make_pair(13, 8), "Hit"});
    hardStrategy_.insert({std::make_pair(13, 9), "Hit"});
    hardStrategy_.insert({std::make_pair(13, 10), "Hit"});
    hardStrategy_.insert({std::make_pair(13, 11), "Hit"});
    hardStrategy_.insert({std::make_pair(14, 2), "Stand"});
    hardStrategy_.insert({std::make_pair(14, 3), "Stand"});
    hardStrategy_.insert({std::make_pair(14, 4), "Stand"});
    hardStrategy_.insert({std::make_pair(14, 5), "Stand"});
    hardStrategy_.insert({std::make_pair(14, 6), "Stand"});
    hardStrategy_.insert({std::make_pair(14, 7), "Hit"});
    hardStrategy_.insert({std::make_pair(14, 8), "Hit"});
    hardStrategy_.insert({std::make_pair(14, 9), "Hit"});
    hardStrategy_.insert({std::make_pair(14, 10), "Hit"});
    hardStrategy_.insert({std::make_pair(14, 11), "Hit"});
    hardStrategy_.insert({std::make_pair(15, 2), "Stand"});
    hardStrategy_.insert({std::make_pair(15, 3), "Stand"});
    hardStrategy_.insert({std::make_pair(15, 4), "Stand"});
    hardStrategy_.insert({std::make_pair(15, 5), "Stand"});
    hardStrategy_.insert({std::make_pair(15, 6), "Stand"});
    hardStrategy_.insert({std::make_pair(15, 7), "Hit"});
    hardStrategy_.insert({std::make_pair(15, 8), "Hit"});
    hardStrategy_.insert({std::make_pair(15, 9), "Hit"});
    hardStrategy_.insert({std::make_pair(15, 10), "Hit"});
    hardStrategy_.insert({std::make_pair(15, 11), "Hit"});
    hardStrategy_.insert({std::make_pair(16, 2), "Stand"});
    hardStrategy_.insert({std::make_pair(16, 3), "Stand"});
    hardStrategy_.insert({std::make_pair(16, 4), "Stand"});
    hardStrategy_.insert({std::make_pair(16, 5), "Stand"});
    hardStrategy_.insert({std::make_pair(16, 6), "Stand"});
    hardStrategy_.insert({std::make_pair(16, 7), "Hit"});
    hardStrategy_.insert({std::make_pair(16, 8), "Hit"});
    hardStrategy_.insert({std::make_pair(16, 9), "Hit"});
    hardStrategy_.insert({std::make_pair(16, 10), "Hit"});
    hardStrategy_.insert({std::make_pair(16, 11), "Hit"});
    hardStrategy_.insert({std::make_pair(17, 2), "Stand"});
    hardStrategy_.insert({std::make_pair(17, 3), "Stand"});
    hardStrategy_.insert({std::make_pair(17, 4), "Stand"});
    hardStrategy_.insert({std::make_pair(17, 5), "Stand"});
    hardStrategy_.insert({std::make_pair(17, 6), "Stand"});
    hardStrategy_.insert({std::make_pair(17, 7), "Stand"});
    hardStrategy_.insert({std::make_pair(17, 8), "Stand"});
    hardStrategy_.insert({std::make_pair(17, 9), "Stand"});
    hardStrategy_.insert({std::make_pair(17, 10), "Stand"});
    hardStrategy_.insert({std::make_pair(17, 11), "Stand"});
    //Initialize softStrategy
    softStrategy_.insert({std::make_pair(13, 2), "Hit"});
    softStrategy_.insert({std::make_pair(13, 3), "Hit"});
    softStrategy_.insert({std::make_pair(13, 4), "Hit"});
    softStrategy_.insert({std::make_pair(13, 5), "Double"});
    softStrategy_.insert({std::make_pair(13, 6), "Double"});
    softStrategy_.insert({std::make_pair(13, 7), "Hit"});
    softStrategy_.insert({std::make_pair(13, 8), "Hit"});
    softStrategy_.insert({std::make_pair(13, 9), "Hit"});
    softStrategy_.insert({std::make_pair(13, 10), "Hit"});
    softStrategy_.insert({std::make_pair(13, 11), "Hit"});
    softStrategy_.insert({std::make_pair(14, 2), "Hit"});
    softStrategy_.insert({std::make_pair(14, 3), "Hit"});
    softStrategy_.insert({std::make_pair(14, 4), "Hit"});
    softStrategy_.insert({std::make_pair(14, 5), "Double"});
    softStrategy_.insert({std::make_pair(14, 6), "Double"});
    softStrategy_.insert({std::make_pair(14, 7), "Hit"});
    softStrategy_.insert({std::make_pair(14, 8), "Hit"});
    softStrategy_.insert({std::make_pair(14, 9), "Hit"});
    softStrategy_.insert({std::make_pair(14, 10), "Hit"});
    softStrategy_.insert({std::make_pair(14, 11), "Hit"});
    softStrategy_.insert({std::make_pair(15, 2), "Hit"});
    softStrategy_.insert({std::make_pair(15, 3), "Hit"});
    softStrategy_.insert({std::make_pair(15, 4), "Double"});
    softStrategy_.insert({std::make_pair(15, 5), "Double"});
    softStrategy_.insert({std::make_pair(15, 6), "Double"});
    softStrategy_.insert({std::make_pair(15, 7), "Hit"});
    softStrategy_.insert({std::make_pair(15, 8), "Hit"});
    softStrategy_.insert({std::make_pair(15, 9), "Hit"});
    softStrategy_.insert({std::make_pair(15, 10), "Hit"});
    softStrategy_.insert({std::make_pair(15, 11), "Hit"});
    softStrategy_.insert({std::make_pair(16, 2), "Hit"});
    softStrategy_.insert({std::make_pair(16, 3), "Hit"});
    softStrategy_.insert({std::make_pair(16, 4), "Double"});
    softStrategy_.insert({std::make_pair(16, 5), "Double"});
    softStrategy_.insert({std::make_pair(16, 6), "Double"});
    softStrategy_.insert({std::make_pair(16, 7), "Hit"});
    softStrategy_.insert({std::make_pair(16, 8), "Hit"});
    softStrategy_.insert({std::make_pair(16, 9), "Hit"});
    softStrategy_.insert({std::make_pair(16, 10), "Hit"});
    softStrategy_.insert({std::make_pair(16, 11), "Hit"});
    softStrategy_.insert({std::make_pair(17, 2), "Hit"});
    softStrategy_.insert({std::make_pair(17, 3), "Double"});
    softStrategy_.insert({std::make_pair(17, 4), "Double"});
    softStrategy_.insert({std::make_pair(17, 5), "Double"});
    softStrategy_.insert({std::make_pair(17, 6), "Double"});
    softStrategy_.insert({std::make_pair(17, 7), "Hit"});
    softStrategy_.insert({std::make_pair(17, 8), "Hit"});
    softStrategy_.insert({std::make_pair(17, 9), "Hit"});
    softStrategy_.insert({std::make_pair(17, 10), "Hit"});
    softStrategy_.insert({std::make_pair(17, 11), "Hit"});
    softStrategy_.insert({std::make_pair(18, 2), "Double"});
    softStrategy_.insert({std::make_pair(18, 3), "Double"});
    softStrategy_.insert({std::make_pair(18, 4), "Double"});
    softStrategy_.insert({std::make_pair(18, 5), "Double"});
    softStrategy_.insert({std::make_pair(18, 6), "Double"});
    softStrategy_.insert({std::make_pair(18, 7), "Stand"});
    softStrategy_.insert({std::make_pair(18, 8), "Stand"});
    softStrategy_.insert({std::make_pair(18, 9), "Hit"});
    softStrategy_.insert({std::make_pair(18, 10), "Hit"});
    softStrategy_.insert({std::make_pair(18, 11), "Hit"});
    softStrategy_.insert({std::make_pair(19, 2), "Stand"});
    softStrategy_.insert({std::make_pair(19, 3), "Stand"});
    softStrategy_.insert({std::make_pair(19, 4), "Stand"});
    softStrategy_.insert({std::make_pair(19, 5), "Stand"});
    softStrategy_.insert({std::make_pair(19, 6), "Double"});
    softStrategy_.insert({std::make_pair(19, 7), "Stand"});
    softStrategy_.insert({std::make_pair(19, 8), "Stand"});
    softStrategy_.insert({std::make_pair(19, 9), "Stand"});
    softStrategy_.insert({std::make_pair(19, 10), "Stand"});
    softStrategy_.insert({std::make_pair(19, 11), "Stand"});
    softStrategy_.insert({std::make_pair(20, 2), "Stand"});
    softStrategy_.insert({std::make_pair(20, 3), "Stand"});
    softStrategy_.insert({std::make_pair(20, 4), "Stand"});
    softStrategy_.insert({std::make_pair(20, 5), "Stand"});
    softStrategy_.insert({std::make_pair(20, 6), "Stand"});
    softStrategy_.insert({std::make_pair(20, 7), "Stand"});
    softStrategy_.insert({std::make_pair(20, 8), "Stand"});
    softStrategy_.insert({std::make_pair(20, 9), "Stand"});
    softStrategy_.insert({std::make_pair(20, 10), "Stand"});
    softStrategy_.insert({std::make_pair(20, 11), "Stand"});
    //initialize pairStrategy
    pairStrategy_.insert({std::make_pair(4, 2), "Split"});
    pairStrategy_.insert({std::make_pair(4, 3), "Split"});
    pairStrategy_.insert({std::make_pair(4, 4), "Split"});
    pairStrategy_.insert({std::make_pair(4, 5), "Split"});
    pairStrategy_.insert({std::make_pair(4, 6), "Split"});
    pairStrategy_.insert({std::make_pair(4, 7), "Split"});
    pairStrategy_.insert({std::make_pair(4, 8), "Hit"});
    pairStrategy_.insert({std::make_pair(4, 9), "Hit"});
    pairStrategy_.insert({std::make_pair(4, 10), "Hit"});
    pairStrategy_.insert({std::make_pair(4, 11), "Hit"});
    pairStrategy_.insert({std::make_pair(6, 2), "Split"});
    pairStrategy_.insert({std::make_pair(6, 3), "Split"});
    pairStrategy_.insert({std::make_pair(6, 4), "Split"});
    pairStrategy_.insert({std::make_pair(6, 5), "Split"});
    pairStrategy_.insert({std::make_pair(6, 6), "Split"});
    pairStrategy_.insert({std::make_pair(6, 7), "Split"});
    pairStrategy_.insert({std::make_pair(6, 8), "Hit"});
    pairStrategy_.insert({std::make_pair(6, 9), "Hit"});
    pairStrategy_.insert({std::make_pair(6, 10), "Hit"});
    pairStrategy_.insert({std::make_pair(6, 11), "Hit"});
    pairStrategy_.insert({std::make_pair(8, 2), "Hit"});
    pairStrategy_.insert({std::make_pair(8, 3), "Hit"});
    pairStrategy_.insert({std::make_pair(8, 4), "Hit"});
    pairStrategy_.insert({std::make_pair(8, 5), "Split"});
    pairStrategy_.insert({std::make_pair(8, 6), "Split"});
    pairStrategy_.insert({std::make_pair(8, 7), "Hit"});
    pairStrategy_.insert({std::make_pair(8, 8), "Hit"});
    pairStrategy_.insert({std::make_pair(8, 9), "Hit"});
    pairStrategy_.insert({std::make_pair(8, 10), "Hit"});
    pairStrategy_.insert({std::make_pair(8, 11), "Hit"});
    pairStrategy_.insert({std::make_pair(10, 2), "Double"});
    pairStrategy_.insert({std::make_pair(10, 3), "Double"});
    pairStrategy_.insert({std::make_pair(10, 4), "Double"});
    pairStrategy_.insert({std::make_pair(10, 5), "Double"});
    pairStrategy_.insert({std::make_pair(10, 6), "Double"});
    pairStrategy_.insert({std::make_pair(10, 7), "Double"});
    pairStrategy_.insert({std::make_pair(10, 8), "Double"});
    pairStrategy_.insert({std::make_pair(10, 9), "Double"});
    pairStrategy_.insert({std::make_pair(10, 10), "Hit"});
    pairStrategy_.insert({std::make_pair(10, 11), "Hit"});
    pairStrategy_.insert({std::make_pair(12, 2), "Split"});
    pairStrategy_.insert({std::make_pair(12, 3), "Split"});
    pairStrategy_.insert({std::make_pair(12, 4), "Split"});
    pairStrategy_.insert({std::make_pair(12, 5), "Split"});
    pairStrategy_.insert({std::make_pair(12, 6), "Split"});
    pairStrategy_.insert({std::make_pair(12, 7), "Hit"});
    pairStrategy_.insert({std::make_pair(12, 8), "Hit"});
    pairStrategy_.insert({std::make_pair(12, 9), "Hit"});
    pairStrategy_.insert({std::make_pair(12, 10), "Hit"});
    pairStrategy_.insert({std::make_pair(12, 11), "Hit"});
    pairStrategy_.insert({std::make_pair(14, 2), "Split"});
    pairStrategy_.insert({std::make_pair(14, 3), "Split"});
    pairStrategy_.insert({std::make_pair(14, 4), "Split"});
    pairStrategy_.insert({std::make_pair(14, 5), "Split"});
    pairStrategy_.insert({std::make_pair(14, 6), "Split"});
    pairStrategy_.insert({std::make_pair(14, 7), "Split"});
    pairStrategy_.insert({std::make_pair(14, 8), "Hit"});
    pairStrategy_.insert({std::make_pair(14, 9), "Hit"});
    pairStrategy_.insert({std::make_pair(14, 10), "Hit"});
    pairStrategy_.insert({std::make_pair(14, 11), "Hit"});
    pairStrategy_.insert({std::make_pair(16, 2), "Split"});
    pairStrategy_.insert({std::make_pair(16, 3), "Split"});
    pairStrategy_.insert({std::make_pair(16, 4), "Split"});
    pairStrategy_.insert({std::make_pair(16, 5), "Split"});
    pairStrategy_.insert({std::make_pair(16, 6), "Split"});
    pairStrategy_.insert({std::make_pair(16, 7), "Split"});
    pairStrategy_.insert({std::make_pair(16, 8), "Split"});
    pairStrategy_.insert({std::make_pair(16, 9), "Split"});
    pairStrategy_.insert({std::make_pair(16, 10), "Split"});
    pairStrategy_.insert({std::make_pair(16, 11), "Split"});
    pairStrategy_.insert({std::make_pair(18, 2), "Split"});
    pairStrategy_.insert({std::make_pair(18, 3), "Split"});
    pairStrategy_.insert({std::make_pair(18, 4), "Split"});
    pairStrategy_.insert({std::make_pair(18, 5), "Split"});
    pairStrategy_.insert({std::make_pair(18, 6), "Split"});
    pairStrategy_.insert({std::make_pair(18, 7), "Stand"});
    pairStrategy_.insert({std::make_pair(18, 8), "Split"});
    pairStrategy_.insert({std::make_pair(18, 9), "Split"});
    pairStrategy_.insert({std::make_pair(18, 10), "Stand"});
    pairStrategy_.insert({std::make_pair(18, 11), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 2), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 3), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 4), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 5), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 6), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 7), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 8), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 9), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 10), "Stand"});
    pairStrategy_.insert({std::make_pair(20, 11), "Stand"});
}